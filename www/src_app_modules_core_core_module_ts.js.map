{"version":3,"file":"src_app_modules_core_core_module_ts.js","mappings":"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","sources":["./src/app/modules/core/core-components/change-password/change-password.component.ts","./src/app/modules/core/core-components/forgot-password/forgot-password.component.ts","./src/app/modules/core/core-components/login/login.component.ts","./src/app/modules/core/core-routing.module.ts","./src/app/modules/core/core.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { TitlesService } from '../../../../Services/Titles-Icons-Manage/titles.service';\r\nimport { IconsService } from '../../../../Services/Titles-Icons-Manage/icons.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserApiService } from '../../../../Services/API/user-api.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  errorMsg: String;\r\n  changePasswordFormGroup: FormGroup;\r\n  spinnerloader: Boolean = false;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ChangePasswordComponent>,\r\n    public titleService: TitlesService,\r\n    private _formBuilder: FormBuilder,\r\n    private userApiService: UserApiService,\r\n    public iconService: IconsService,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.changePasswordFormGroup = this._formBuilder.group({\r\n      old_password: ['', [Validators.required]],\r\n      user_password: ['', [Validators.required]],\r\n      user_email:[JSON.parse(localStorage.getItem('userDetails')).user_email]\r\n    });\r\n  }\r\n  onNoClick() {\r\n    this.dialogRef.close();\r\n  }\r\n  changePassFun() {\r\n    console.log(this.changePasswordFormGroup.value);\r\n    this.spinnerloader = true;\r\n    this.userApiService.changePassword(this.changePasswordFormGroup.value).subscribe((result: any) => {\r\n      if (result.success) {\r\n        this.spinnerloader = false;\r\n        this.toastr.success(result.msg);\r\n        this.changePasswordFormGroup.markAsPristine();\r\n        this.changePasswordFormGroup.markAsUntouched();\r\n        this.changePasswordFormGroup.reset();\r\n        // localStorage.setItem('userDetails',JSON.stringify(result.data));\r\n        this.onNoClick();\r\n      }else{\r\n        this.spinnerloader = false;\r\n        this.toastr.error(result.msg);\r\n        this.errorMsg=result.msg;\r\n        setInterval(()=>{\r\n          this.errorMsg='';\r\n        },5000)\r\n      }\r\n    }, error => {\r\n      this.spinnerloader = false;\r\n      this.toastr.error('Internal server error.');\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TitlesService } from '../../../../Services/Titles-Icons-Manage/titles.service';\r\nimport { IconsService } from '../../../../Services/Titles-Icons-Manage/icons.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { UserApiService } from '../../../../Services/API/user-api.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  hide = true;\r\n  errorMsg: String;\r\n  forgotPasswordFormGroup: FormGroup;\r\n  spinnerloader: Boolean = false;\r\n\r\n  constructor(\r\n    public titleService: TitlesService,\r\n    private _formBuilder: FormBuilder,\r\n    private userApiService: UserApiService,\r\n    public iconService: IconsService,\r\n    private router: Router,\r\n    private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.forgotPasswordFormGroup = this._formBuilder.group({\r\n      user_email: ['', [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\r\n      user_password: ['', [Validators.required]],\r\n    });\r\n  }\r\n  onNoClick() {\r\n    this.router.navigateByUrl('login');\r\n  }\r\n  forgotPassFun() {\r\n    console.log(this.forgotPasswordFormGroup.value);\r\n    this.spinnerloader = true;\r\n    this.userApiService.forgotPassword(this.forgotPasswordFormGroup.value).subscribe((result: any) => {\r\n      if (result.success) {\r\n        this.spinnerloader = false;\r\n        this.toastr.success(result.msg);\r\n        this.forgotPasswordFormGroup.markAsPristine();\r\n        this.forgotPasswordFormGroup.markAsUntouched();\r\n        this.forgotPasswordFormGroup.reset();\r\n        this.onNoClick();\r\n      }else{\r\n        this.spinnerloader = false;\r\n        this.toastr.error(result.msg);\r\n        this.errorMsg=result.msg;\r\n        setInterval(()=>{\r\n          this.errorMsg='';\r\n        },5000)\r\n      }\r\n    }, error => {\r\n      this.spinnerloader = false;\r\n      this.toastr.error('Internal server error.');\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport { UserApiService } from '../../../../Services/API/user-api.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { TitlesService } from '../../../../services/Titles-Icons-Manage/titles.service';\nimport { IconsService } from '../../../../services/Titles-Icons-Manage/icons.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  loginFormGroup: FormGroup;\n  errorMsg: any;\n  showDownloadBtn: boolean = false;\n  spinnerloader: Boolean = false;\n\n  constructor(private _formBuilder: FormBuilder,\n    private userApiService: UserApiService,\n    public titleService: TitlesService,\n    public iconService: IconsService,\n    private toastr: ToastrService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.loginFormGroup = this._formBuilder.group({\n      user_email: ['', [Validators.required, Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]],\n      user_password: ['', [Validators.required]]\n    });\n  }\n  loginFun() {\n    this.spinnerloader = true;\n    this.userApiService.loginAuth(this.loginFormGroup.value).subscribe((result: any) => {\n      if (result.success) {\n        this.spinnerloader = false;\n        this.toastr.success(result.msg);\n        let obj = {\n          user_email: result.data.user_email,\n          user_role: result.data.user_role,\n          user_id: result.data.user_id,\n          user_ulb: result.data.user_ulb\n        }\n        localStorage.setItem('userDetails', JSON.stringify(obj));\n        this.router.navigateByUrl('esquare')\n      } else {\n        this.spinnerloader = false;\n        this.toastr.error(result.msg);\n        this.errorMsg = result.msg;\n        setInterval(() => {\n          this.errorMsg = '';\n        }, 5000)\n      }\n    }, error => {\n      this.spinnerloader = false;\n      this.toastr.error('Internal server error.');\n    })\n  }\n  forgotPassword() {\n    this.router.navigateByUrl('forgot-password')\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './core-components/login/login.component';\nimport { MainComponent } from '../admin/admin-components/main/main.component';\nimport { ChangePasswordComponent } from './core-components/change-password/change-password.component';\nimport { ForgotPasswordComponent } from './core-components/forgot-password/forgot-password.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'forgot-password',\n    component: ForgotPasswordComponent\n  },\n  {\n    path: 'change-password',\n    component: ChangePasswordComponent\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoreRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CoreRoutingModule } from './core-routing.module';\n//shared module\nimport { SharedModule } from '../shared/shared.module';\nimport { LoginComponent } from './core-components/login/login.component';\nimport { ChangePasswordComponent } from './core-components/change-password/change-password.component';\nimport { ForgotPasswordComponent } from './core-components/forgot-password/forgot-password.component';\n@NgModule({\n  declarations: [LoginComponent, ChangePasswordComponent, ForgotPasswordComponent],\n  imports: [\n    CommonModule,\n    CoreRoutingModule,\n    SharedModule\n  ]\n})\nexport class CoreModule { }\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}